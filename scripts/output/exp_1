
================ ANALYZING OxigenWallet.apk ================

Experiment 1: Permissions Misuse

Used Permissions:
android.permission.WAKE_LOCK
	USED by API method: <analysis.MethodAnalysis Landroid/os/PowerManager$WakeLock;->release()V>
	in app method:      Landroid/support/v4/content/WakefulBroadcastReceiver; completeWakefulIntent (Landroid/content/Intent;)Z
android.permission.WAKE_LOCK
	USED by API method: <analysis.MethodAnalysis Landroid/os/PowerManager$WakeLock;->acquire(J)V>
	in app method:      Landroid/support/v4/content/WakefulBroadcastReceiver; startWakefulService (Landroid/content/Context; Landroid/content/Intent;)Landroid/content/ComponentName;
android.permission.WAKE_LOCK
	USED by API method: <analysis.MethodAnalysis Landroid/widget/VideoView;->setVideoURI(Landroid/net/Uri;)V>
	in app method:      Lcom/oxigen/oxigenwallet/common/MetaDataVideoView; onCreate (Landroid/os/Bundle;)V
android.permission.WAKE_LOCK
	USED by API method: <analysis.MethodAnalysis Landroid/widget/VideoView;->start()V>
	in app method:      Lcom/oxigen/oxigenwallet/common/aa; onPrepared (Landroid/media/MediaPlayer;)V
android.permission.WAKE_LOCK
	USED by API method: <analysis.MethodAnalysis Landroid/media/MediaPlayer;->stop()V>
	in app method:      Lcom/oxigen/oxigenwallet/common/MetaDataAudioView; c ()V
android.permission.WAKE_LOCK
	USED by API method: <analysis.MethodAnalysis Landroid/media/MediaPlayer;->pause()V>
	in app method:      Lcom/oxigen/oxigenwallet/common/MetaDataAudioView; d ()V
android.permission.WAKE_LOCK
	USED by API method: <analysis.MethodAnalysis Landroid/media/MediaPlayer;->start()V>
	in app method:      Lcom/oxigen/oxigenwallet/common/MetaDataAudioView; e ()V
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Landroid/support/v4/net/ConnectivityManagerCompatHoneycombMR2; isActiveNetworkMetered (Landroid/net/ConnectivityManager;)Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lcom/c/a/r; d (Lcom/c/a/d;)V
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lcom/c/a/v; onReceive (Landroid/content/Context; Landroid/content/Intent;)V
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lcom/oxigen/oxigenwallet/netone/cb; a (Landroid/content/Context;)Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Landroid/support/v4/net/ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl; isActiveNetworkMetered (Landroid/net/ConnectivityManager;)Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lcom/google/ads/conversiontracking/r; d (Landroid/content/Context;)Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Landroid/support/v4/net/ConnectivityManagerCompatGingerbread; isActiveNetworkMetered (Landroid/net/ConnectivityManager;)Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getNetworkInfo(I)Landroid/net/NetworkInfo;>
	in app method:      Landroid/support/v4/net/ConnectivityManagerCompat; getNetworkInfoFromBroadcast (Landroid/net/ConnectivityManager; Landroid/content/Intent;)Landroid/net/NetworkInfo;
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getNetworkInfo(I)Landroid/net/NetworkInfo;>
	in app method:      Lcom/appsflyer/AppsFlyerLib; n (Landroid/content/Context;)Ljava/lang/String;
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getNetworkInfo(I)Landroid/net/NetworkInfo;>
	in app method:      Lcom/appsflyer/AppsFlyerLib; n (Landroid/content/Context;)Ljava/lang/String;
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->isActiveNetworkMetered()Z>
	in app method:      Landroid/support/v4/net/ConnectivityManagerCompatJellyBean; isActiveNetworkMetered (Landroid/net/ConnectivityManager;)Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getAllNetworkInfo()[Landroid/net/NetworkInfo;>
	in app method:      Lcom/a/a/a/a/h; b ()Z
android.permission.GET_ACCOUNTS
	USED by API method: <analysis.MethodAnalysis Landroid/accounts/AccountManager;->getAccounts()[Landroid/accounts/Account;>
	in app method:      Lcom/oxigen/oxigenwallet/PersonalDetail; f ()V
android.permission.READ_PHONE_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/telephony/TelephonyManager;->getLine1Number()Ljava/lang/String;>
	in app method:      Lcom/a/a/a/a/a/c; a (Ljava/lang/Object;)V
android.permission.READ_PHONE_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/telephony/TelephonyManager;->getDeviceId()Ljava/lang/String;>
	in app method:      Lcom/a/a/a/a/a/c; a (Ljava/lang/Object;)V
android.permission.READ_PHONE_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/telephony/TelephonyManager;->getDeviceId()Ljava/lang/String;>
	in app method:      Lcom/oxigen/oxigenwallet/EnterPin; f ()[Ljava/lang/String;
android.permission.READ_PHONE_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/telephony/TelephonyManager;->getDeviceId()Ljava/lang/String;>
	in app method:      Lcom/oxigen/oxigenwallet/SetPassword; d ()[Ljava/lang/String;
android.permission.READ_PHONE_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/telephony/TelephonyManager;->getDeviceId()Ljava/lang/String;>
	in app method:      Lcom/oxigen/oxigenwallet/SignUp; g ()[Ljava/lang/String;
android.permission.READ_PHONE_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/telephony/TelephonyManager;->getDeviceId()Ljava/lang/String;>
	in app method:      Lcom/a/a/a/a/a/c; a (Ljava/lang/Object;)V

Unused Permissions:
android.hardware.camera
android.permission.READ_SMS
android.permission.WRITE_EXTERNAL_STORAGE
android.permission.RECEIVE_SMS
com.oxigen.oxigenwallet.permission.C2D_MESSAGE
com.google.android.c2dm.permission.RECEIVE
android.permission.READ_EXTERNAL_STORAGE

Dangerous Combinations:

Unrequested Permissions:

================ ANALYZING mPAY.apk ================

Experiment 1: Permissions Misuse

Used Permissions:
android.permission.WAKE_LOCK
	USED by API method: <analysis.MethodAnalysis Landroid/os/PowerManager$WakeLock;->acquire(J)V>
	in app method:      Lcom/google/android/gms/internal/oq; a (J)V
android.permission.WAKE_LOCK
	USED by API method: <analysis.MethodAnalysis Landroid/os/PowerManager$WakeLock;->acquire(J)V>
	in app method:      Landroid/support/v4/content/ab; a (Landroid/content/Context; Landroid/content/Intent;)Landroid/content/ComponentName;
android.permission.WAKE_LOCK
	USED by API method: <analysis.MethodAnalysis Landroid/os/PowerManager$WakeLock;->release()V>
	in app method:      Lcom/google/android/gms/internal/oq; a ()V
android.permission.WAKE_LOCK
	USED by API method: <analysis.MethodAnalysis Landroid/os/PowerManager$WakeLock;->release()V>
	in app method:      Landroid/support/v4/content/ab; a (Landroid/content/Intent;)Z
android.permission.WAKE_LOCK
	USED by API method: <analysis.MethodAnalysis Landroid/os/PowerManager$WakeLock;->setWorkSource(Landroid/os/WorkSource;)V>
	in app method:      Lcom/google/android/gms/internal/oq; a (Landroid/os/WorkSource;)V
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lcom/google/android/gms/internal/ik; a (Landroid/content/Context; Landroid/net/ConnectivityManager; Landroid/content/pm/PackageManager;)I
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lcom/google/android/gms/internal/ik; a (Landroid/content/Context; Landroid/content/pm/PackageManager;)V
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lth/co/ais/mpay/ConnectivityChangeReceiver; a (Landroid/content/Context;)V
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lcom/google/android/gms/tagmanager/dm; a ()Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lcom/bumptech/glide/d/f; a (Landroid/content/Context;)Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lcom/google/android/gms/analytics/internal/k; f ()Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lcom/google/android/gms/internal/ik; a (Landroid/content/Context; Landroid/content/pm/PackageManager;)V
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lcom/google/android/gms/internal/qb; b ()Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lio/fabric/sdk/android/services/common/CommonUtils; n (Landroid/content/Context;)Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lcom/palomar/util/WebViewUtil; b (Landroid/content/Context;)Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lcom/google/android/gms/analytics/internal/l; b ()Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->isActiveNetworkMetered()Z>
	in app method:      Lcom/google/android/gms/internal/ik; a (Landroid/content/Context; Landroid/content/pm/PackageManager;)V
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getNetworkInfo(I)Landroid/net/NetworkInfo;>
	in app method:      Lcom/rabbitcard/d; f (Landroid/content/Context;)Ljava/lang/String;
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getNetworkInfo(I)Landroid/net/NetworkInfo;>
	in app method:      Lcom/rabbitcard/d; f (Landroid/content/Context;)Ljava/lang/String;
android.permission.READ_PHONE_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/telephony/TelephonyManager;->getSimSerialNumber()Ljava/lang/String;>
	in app method:      Lcom/rabbitcard/d; c (Landroid/content/Context;)Ljava/lang/String;
android.permission.READ_PHONE_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/telephony/TelephonyManager;->getSubscriberId()Ljava/lang/String;>
	in app method:      Lcom/rabbitcard/d; d (Landroid/content/Context;)Ljava/lang/String;
android.permission.READ_PHONE_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/telephony/TelephonyManager;->getDeviceId()Ljava/lang/String;>
	in app method:      Lcom/rabbitcard/d; e (Landroid/content/Context;)Ljava/lang/String;
android.permission.READ_PHONE_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/telephony/TelephonyManager;->getDeviceId()Ljava/lang/String;>
	in app method:      Lio/fabric/sdk/android/services/common/IdManager; k ()Ljava/lang/String;

Unused Permissions:
android.permission.CAMERA
android.permission.WRITE_EXTERNAL_STORAGE
org.simalliance.openmobileapi.SMARTCARD
android.permission.READ_CONTACTS
com.palomar.mpay.permission.C2D_MESSAGE
com.google.android.c2dm.permission.RECEIVE
android.permission.READ_EXTERNAL_STORAGE

Dangerous Combinations:
Dangerous Combination: ['android.permission.CAMERA', 'android.permission.INTERNET']

Unrequested Permissions:

================ ANALYZING Arnold-Berthoud-Cresent-Rigsby.apk ================

Experiment 1: Permissions Misuse

Used Permissions:
android.permission.WAKE_LOCK
	USED by API method: <analysis.MethodAnalysis Landroid/os/PowerManager$WakeLock;->release()V>
	in app method:      Landroidx/core/app/JobIntentService$CompatWorkEnqueuer; serviceProcessingStarted ()V
android.permission.WAKE_LOCK
	USED by API method: <analysis.MethodAnalysis Landroid/os/PowerManager$WakeLock;->release()V>
	in app method:      Lcom/google/android/gms/stats/WakeLock; zzd (I)V
android.permission.WAKE_LOCK
	USED by API method: <analysis.MethodAnalysis Landroid/os/PowerManager$WakeLock;->release()V>
	in app method:      Landroidx/core/app/JobIntentService$CompatWorkEnqueuer; serviceProcessingFinished ()V
android.permission.WAKE_LOCK
	USED by API method: <analysis.MethodAnalysis Landroid/os/PowerManager$WakeLock;->release()V>
	in app method:      Landroidx/legacy/content/WakefulBroadcastReceiver; completeWakefulIntent (Landroid/content/Intent;)Z
android.permission.WAKE_LOCK
	USED by API method: <analysis.MethodAnalysis Landroid/os/PowerManager$WakeLock;->acquire(J)V>
	in app method:      Landroidx/core/app/JobIntentService$CompatWorkEnqueuer; serviceProcessingFinished ()V
android.permission.WAKE_LOCK
	USED by API method: <analysis.MethodAnalysis Landroid/os/PowerManager$WakeLock;->acquire(J)V>
	in app method:      Landroidx/core/app/JobIntentService$CompatWorkEnqueuer; serviceProcessingStarted ()V
android.permission.WAKE_LOCK
	USED by API method: <analysis.MethodAnalysis Landroid/os/PowerManager$WakeLock;->acquire(J)V>
	in app method:      Landroidx/legacy/content/WakefulBroadcastReceiver; startWakefulService (Landroid/content/Context; Landroid/content/Intent;)Landroid/content/ComponentName;
android.permission.WAKE_LOCK
	USED by API method: <analysis.MethodAnalysis Landroid/os/PowerManager$WakeLock;->acquire(J)V>
	in app method:      Landroidx/core/app/JobIntentService$CompatWorkEnqueuer; enqueueWork (Landroid/content/Intent;)V
android.permission.WAKE_LOCK
	USED by API method: <analysis.MethodAnalysis Landroid/os/PowerManager$WakeLock;->acquire()V>
	in app method:      Lcom/google/android/gms/stats/WakeLock; acquire (J)V
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->isActiveNetworkMetered()Z>
	in app method:      Landroidx/core/net/ConnectivityManagerCompat$Api16Impl; isActiveNetworkMetered (Landroid/net/ConnectivityManager;)Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getNetworkInfo(I)Landroid/net/NetworkInfo;>
	in app method:      Landroidx/core/net/ConnectivityManagerCompat; getNetworkInfoFromBroadcast (Landroid/net/ConnectivityManager; Landroid/content/Intent;)Landroid/net/NetworkInfo;
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lio/grpc/android/AndroidChannelBuilder$AndroidChannel$NetworkReceiver; onReceive (Landroid/content/Context; Landroid/content/Intent;)V
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lcom/google/firebase/firestore/remote/AndroidConnectivityMonitor; isConnected ()Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lcom/google/android/gms/measurement/internal/zzfw; zzu ()Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lcom/google/android/gms/measurement/internal/zzkc; zzc ()Z

Unused Permissions:
android.permission.CAMERA
com.google.android.providers.gsf.permission.READ_GSERVICES
com.example.mariokarttournamentorganizer.DYNAMIC_RECEIVER_NOT_EXPORTED_PERMISSION
com.google.android.gms.permission.AD_ID
android.permission.ACCESS_ADSERVICES_ATTRIBUTION
android.permission.ACCESS_ADSERVICES_AD_ID
com.google.android.finsky.permission.BIND_GET_INSTALL_REFERRER_SERVICE

Dangerous Combinations:
Dangerous Combination: ['android.permission.CAMERA', 'android.permission.INTERNET']

Unrequested Permissions:

================ ANALYZING Money On Mobile.apk ================

Experiment 1: Permissions Misuse

Used Permissions:
android.permission.WAKE_LOCK
	USED by API method: <analysis.MethodAnalysis Landroid/os/PowerManager$WakeLock;->release()V>
	in app method:      Landroid/support/v4/content/WakefulBroadcastReceiver; completeWakefulIntent (Landroid/content/Intent;)Z
android.permission.WAKE_LOCK
	USED by API method: <analysis.MethodAnalysis Landroid/os/PowerManager$WakeLock;->acquire(J)V>
	in app method:      Landroid/support/v4/content/WakefulBroadcastReceiver; startWakefulService (Landroid/content/Context; Landroid/content/Intent;)Landroid/content/ComponentName;
android.permission.WAKE_LOCK
	USED by API method: <analysis.MethodAnalysis Landroid/widget/VideoView;->setVideoPath(Ljava/lang/String;)V>
	in app method:      Lcom/google/android/gms/internal/dt; cq ()V
android.permission.WAKE_LOCK
	USED by API method: <analysis.MethodAnalysis Landroid/widget/VideoView;->stopPlayback()V>
	in app method:      Lcom/google/android/gms/internal/dt; destroy ()V
android.permission.WAKE_LOCK
	USED by API method: <analysis.MethodAnalysis Landroid/widget/VideoView;->pause()V>
	in app method:      Lcom/google/android/gms/internal/dt; pause ()V
android.permission.WAKE_LOCK
	USED by API method: <analysis.MethodAnalysis Landroid/widget/VideoView;->start()V>
	in app method:      Lcom/google/android/gms/internal/dt; play ()V
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getNetworkInfo(I)Landroid/net/NetworkInfo;>
	in app method:      Landroid/support/v4/net/ConnectivityManagerCompat; getNetworkInfoFromBroadcast (Landroid/net/ConnectivityManager; Landroid/content/Intent;)Landroid/net/NetworkInfo;
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lcom/google/android/gms/internal/fv; a (Landroid/content/Context; Landroid/net/ConnectivityManager; Landroid/content/pm/PackageManager;)I
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Landroid/support/v4/net/ConnectivityManagerCompatGingerbread; isActiveNetworkMetered (Landroid/net/ConnectivityManager;)Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lcom/google/android/gms/tagmanager/co; qd ()Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Landroid/support/v4/net/ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl; isActiveNetworkMetered (Landroid/net/ConnectivityManager;)Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lcom/google/android/gms/tagmanager/db; ea ()Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Landroid/support/v4/net/ConnectivityManagerCompatHoneycombMR2; isActiveNetworkMetered (Landroid/net/ConnectivityManager;)Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lio/fabric/sdk/android/services/common/CommonUtils; canTryConnection (Landroid/content/Context;)Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lcom/google/android/gms/analytics/h; ea ()Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lcom/google/android/gms/internal/fv; <init> (Landroid/content/Context;)V
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lcom/mom/app/utils/ConnectionUtil; checkConnectivity (Landroid/content/Context;)Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lcom/google/android/gms/internal/fv; <init> (Landroid/content/Context;)V
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->isActiveNetworkMetered()Z>
	in app method:      Landroid/support/v4/net/ConnectivityManagerCompatJellyBean; isActiveNetworkMetered (Landroid/net/ConnectivityManager;)Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->isActiveNetworkMetered()Z>
	in app method:      Lcom/google/android/gms/internal/fv; <init> (Landroid/content/Context;)V
android.permission.USE_CREDENTIALS
	USED by API method: <analysis.MethodAnalysis Landroid/accounts/AccountManager;->invalidateAuthToken(Ljava/lang/String; Ljava/lang/String;)V>
	in app method:      Lcom/google/android/gms/auth/GoogleAuthUtil; invalidateToken (Landroid/content/Context; Ljava/lang/String;)V

Unused Permissions:
com.google.android.psf.perroviders.gmission.READ_GSERVICES
com.mom.app.permission.C2D_MESSAGE
com.google.android.c2dm.permission.RECEIVE

Dangerous Combinations:

Unrequested Permissions:

================ ANALYZING vulnerable-app.apk ================

Experiment 1: Permissions Misuse

Used Permissions:

Unused Permissions:

Dangerous Combinations:

Unrequested Permissions:

================ ANALYZING Zuum.apk ================

Experiment 1: Permissions Misuse

Used Permissions:
android.permission.WAKE_LOCK
	USED by API method: <analysis.MethodAnalysis Landroid/os/PowerManager$WakeLock;->release()V>
	in app method:      Landroid/support/v4/content/WakefulBroadcastReceiver; completeWakefulIntent (Landroid/content/Intent;)Z
android.permission.WAKE_LOCK
	USED by API method: <analysis.MethodAnalysis Landroid/os/PowerManager$WakeLock;->acquire(J)V>
	in app method:      Landroid/support/v4/content/WakefulBroadcastReceiver; startWakefulService (Landroid/content/Context; Landroid/content/Intent;)Landroid/content/ComponentName;
android.permission.WAKE_LOCK
	USED by API method: <analysis.MethodAnalysis Landroid/media/MediaPlayer;->start()V>
	in app method:      Lcom/google/zxing/client/android/BeepManager; playBeepSoundAndVibrate ()V
android.permission.ACCESS_COARSE_LOCATION
	USED by API method: <analysis.MethodAnalysis Landroid/location/LocationManager;->requestLocationUpdates(Ljava/lang/String; J F Landroid/location/LocationListener; Landroid/os/Looper;)V>
	in app method:      Lcom/flurry/sdk/jj; a (Ljava/lang/String;)V
android.permission.ACCESS_COARSE_LOCATION
	USED by API method: <analysis.MethodAnalysis Landroid/location/LocationManager;->getLastKnownLocation(Ljava/lang/String;)Landroid/location/Location;>
	in app method:      Lcom/flurry/sdk/jj; b (Ljava/lang/String;)Landroid/location/Location;
android.permission.ACCESS_COARSE_LOCATION
	USED by API method: <analysis.MethodAnalysis Landroid/location/LocationManager;->removeUpdates(Landroid/location/LocationListener;)V>
	in app method:      Lcom/flurry/sdk/jj; h ()V
android.permission.ACCESS_WIFI_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/wifi/WifiManager;->enableNetwork(I Z)Z>
	in app method:      Lcom/google/zxing/client/android/wifi/WifiConfigManager; updateNetwork (Landroid/net/wifi/WifiManager; Landroid/net/wifi/WifiConfiguration;)V
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Landroid/support/v4/net/ConnectivityManagerCompatHoneycombMR2; isActiveNetworkMetered (Landroid/net/ConnectivityManager;)Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lcom/m4u/vivozuum/util/android/AndroidUtil; verificaConectividadeComInternet (Landroid/content/Context;)Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Landroid/support/v4/net/ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl; isActiveNetworkMetered (Landroid/net/ConnectivityManager;)Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lcom/flurry/sdk/jl; a (Landroid/content/Context;)Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Landroid/support/v4/net/ConnectivityManagerCompatGingerbread; isActiveNetworkMetered (Landroid/net/ConnectivityManager;)Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lcom/flurry/sdk/jl; d ()Lcom/flurry/sdk/jl$a;
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getNetworkInfo(I)Landroid/net/NetworkInfo;>
	in app method:      Landroid/support/v4/net/ConnectivityManagerCompat; getNetworkInfoFromBroadcast (Landroid/net/ConnectivityManager; Landroid/content/Intent;)Landroid/net/NetworkInfo;
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->isActiveNetworkMetered()Z>
	in app method:      Landroid/support/v4/net/ConnectivityManagerCompatJellyBean; isActiveNetworkMetered (Landroid/net/ConnectivityManager;)Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/wifi/WifiManager;->enableNetwork(I Z)Z>
	in app method:      Lcom/google/zxing/client/android/wifi/WifiConfigManager; updateNetwork (Landroid/net/wifi/WifiManager; Landroid/net/wifi/WifiConfiguration;)V
android.permission.ACCESS_FINE_LOCATION
	USED by API method: <analysis.MethodAnalysis Landroid/location/LocationManager;->requestLocationUpdates(Ljava/lang/String; J F Landroid/location/LocationListener; Landroid/os/Looper;)V>
	in app method:      Lcom/flurry/sdk/jj; a (Ljava/lang/String;)V
android.permission.ACCESS_FINE_LOCATION
	USED by API method: <analysis.MethodAnalysis Landroid/location/LocationManager;->getLastKnownLocation(Ljava/lang/String;)Landroid/location/Location;>
	in app method:      Lcom/flurry/sdk/jj; b (Ljava/lang/String;)Landroid/location/Location;
android.permission.ACCESS_FINE_LOCATION
	USED by API method: <analysis.MethodAnalysis Landroid/location/LocationManager;->removeUpdates(Landroid/location/LocationListener;)V>
	in app method:      Lcom/flurry/sdk/jj; h ()V
android.permission.GET_TASKS
	USED by API method: <analysis.MethodAnalysis Landroid/app/ActivityManager;->getRunningAppProcesses()Ljava/util/List;>
	in app method:      Lcom/google/android/gms/internal/zzmy; zzj (Landroid/content/Context; I)Ljava/lang/String;
android.permission.GET_TASKS
	USED by API method: <analysis.MethodAnalysis Landroid/app/ActivityManager;->getRunningTasks(I)Ljava/util/List;>
	in app method:      Lcom/m4u/vivozuum/util/android/AndroidUtil; aplicacaoEstaEmBackground (Landroid/content/Context;)Z

Unused Permissions:
android.permission.CAMERA
android.permission.WRITE_EXTERNAL_STORAGE
android.permission.FLASHLIGHT
android.permission.CHANGE_WIFI_STATE
android.permission.GET_ACCOUNTS
com.google.android.c2dm.permission.RECEIVE

Dangerous Combinations:
Dangerous Combination: ['android.permission.CAMERA', 'android.permission.INTERNET']

Unrequested Permissions:

================ ANALYZING GCash.apk ================

Experiment 1: Permissions Misuse

Used Permissions:
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getNetworkInfo(I)Landroid/net/NetworkInfo;>
	in app method:      Lcom/mixpanel/android/mpmetrics/SystemInformation; isWifiConnected ()Ljava/lang/Boolean;
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getNetworkInfo(I)Landroid/net/NetworkInfo;>
	in app method:      Landroid/support/v4/net/ConnectivityManagerCompat; getNetworkInfoFromBroadcast (Landroid/net/ConnectivityManager; Landroid/content/Intent;)Landroid/net/NetworkInfo;
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Landroid/support/v4/net/ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl; isActiveNetworkMetered (Landroid/net/ConnectivityManager;)Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lcom/globe/gcash/android/utility/NetworkConnectionManager; isNetworkAlive ()Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Landroid/support/v4/net/ConnectivityManagerCompatGingerbread; isActiveNetworkMetered (Landroid/net/ConnectivityManager;)Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Landroid/support/v4/net/ConnectivityManagerCompatHoneycombMR2; isActiveNetworkMetered (Landroid/net/ConnectivityManager;)Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lcom/mixpanel/android/util/HttpService; isOnline (Landroid/content/Context;)Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lcom/google/android/gms/internal/ci; a (Landroid/content/Context; Landroid/net/ConnectivityManager; Landroid/content/pm/PackageManager;)I
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;>
	in app method:      Lcom/amobee/richmedia/controller/OrmmaNetworkController; getNetwork ()Ljava/lang/String;
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->isActiveNetworkMetered()Z>
	in app method:      Landroid/support/v4/net/ConnectivityManagerCompatJellyBean; isActiveNetworkMetered (Landroid/net/ConnectivityManager;)Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getAllNetworkInfo()[Landroid/net/NetworkInfo;>
	in app method:      Lcom/globe/gcash/android/utility/NetworkConnectionManager; isNetworkAvailable ()Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getAllNetworkInfo()[Landroid/net/NetworkInfo;>
	in app method:      Lcom/globe/gcash/android/utility/CheckNetworkConnection; isMobileNetworkEnabled (Landroid/content/Context;)Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getAllNetworkInfo()[Landroid/net/NetworkInfo;>
	in app method:      Lcom/globe/gcash/android/utility/CheckNetworkConnection; isWifiEnabled (Landroid/content/Context;)Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getAllNetworkInfo()[Landroid/net/NetworkInfo;>
	in app method:      Lcom/globe/gcash/android/utility/NetworkConnectionManager; isWifiNetworkEnabled ()Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getAllNetworkInfo()[Landroid/net/NetworkInfo;>
	in app method:      Lcom/globe/gcash/android/utility/NetworkConnectionManager; isMobileNetworkEnabled ()Z
android.permission.ACCESS_NETWORK_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/net/ConnectivityManager;->getAllNetworkInfo()[Landroid/net/NetworkInfo;>
	in app method:      Lcom/globe/gcash/android/utility/CheckNetworkConnection; isNetworkAvailable (Landroid/content/Context;)Z
android.permission.ACCESS_FINE_LOCATION
	USED by API method: <analysis.MethodAnalysis Landroid/location/LocationManager;->requestLocationUpdates(Ljava/lang/String; J F Landroid/location/LocationListener;)V>
	in app method:      Lcom/amobee/richmedia/controller/listeners/LocListener; start ()V
android.permission.ACCESS_FINE_LOCATION
	USED by API method: <analysis.MethodAnalysis Landroid/location/LocationManager;->requestLocationUpdates(Ljava/lang/String; J F Landroid/location/LocationListener;)V>
	in app method:      Lcom/globe/gcash/android/fragment/geolocator/LocatorTabsFragment; getLocation (Ljava/lang/String; Landroid/location/LocationListener;)V
android.permission.ACCESS_FINE_LOCATION
	USED by API method: <analysis.MethodAnalysis Landroid/location/LocationManager;->removeUpdates(Landroid/location/LocationListener;)V>
	in app method:      Lcom/globe/gcash/android/fragment/geolocator/LocatorTabsFragment; onDestroy ()V
android.permission.ACCESS_FINE_LOCATION
	USED by API method: <analysis.MethodAnalysis Landroid/location/LocationManager;->removeUpdates(Landroid/location/LocationListener;)V>
	in app method:      Lcom/globe/gcash/android/fragment/geolocator/LocatorTabsFragment$3; onStatusChanged (Ljava/lang/String; I Landroid/os/Bundle;)V
android.permission.ACCESS_FINE_LOCATION
	USED by API method: <analysis.MethodAnalysis Landroid/location/LocationManager;->removeUpdates(Landroid/location/LocationListener;)V>
	in app method:      Lcom/amobee/richmedia/controller/listeners/LocListener; stop ()V
android.permission.ACCESS_FINE_LOCATION
	USED by API method: <analysis.MethodAnalysis Landroid/location/LocationManager;->removeUpdates(Landroid/location/LocationListener;)V>
	in app method:      Lcom/globe/gcash/android/fragment/geolocator/LocatorTabsFragment$3; onProviderDisabled (Ljava/lang/String;)V
android.permission.ACCESS_FINE_LOCATION
	USED by API method: <analysis.MethodAnalysis Landroid/location/LocationManager;->getProvider(Ljava/lang/String;)Landroid/location/LocationProvider;>
	in app method:      Lcom/amobee/richmedia/controller/OrmmaLocationController; <init> (Lcom/amobee/richmedia/view/AmobeeView; Landroid/content/Context;)V
android.permission.ACCESS_FINE_LOCATION
	USED by API method: <analysis.MethodAnalysis Landroid/location/LocationManager;->getProvider(Ljava/lang/String;)Landroid/location/LocationProvider;>
	in app method:      Lcom/amobee/richmedia/controller/OrmmaLocationController; <init> (Lcom/amobee/richmedia/view/AmobeeView; Landroid/content/Context;)V
android.permission.ACCESS_FINE_LOCATION
	USED by API method: <analysis.MethodAnalysis Landroid/location/LocationManager;->getProviders(Z)Ljava/util/List;>
	in app method:      Lcom/amobee/richmedia/controller/OrmmaLocationController; getLocation ()Ljava/lang/String;
android.permission.ACCESS_FINE_LOCATION
	USED by API method: <analysis.MethodAnalysis Landroid/location/LocationManager;->getLastKnownLocation(Ljava/lang/String;)Landroid/location/Location;>
	in app method:      Lcom/amobee/richmedia/controller/OrmmaLocationController; getLocation ()Ljava/lang/String;
android.permission.READ_PHONE_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/telephony/TelephonyManager;->getDeviceId()Ljava/lang/String;>
	in app method:      Lcom/globe/gcash/android/utility/TelephonyManagerUtils; <init> (Lcom/google/inject/Provider;)V
android.permission.READ_PHONE_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/telephony/TelephonyManager;->getDeviceId()Ljava/lang/String;>
	in app method:      Lcom/amobee/adsdk/Parameters; setImei (Ljava/lang/Boolean; Ljava/lang/Boolean;)V
android.permission.READ_PHONE_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/telephony/TelephonyManager;->getDeviceId()Ljava/lang/String;>
	in app method:      Lcom/globe/gcash/android/utility/GCashUtils; generateSessionId (Landroid/app/Activity;)Ljava/lang/String;
android.permission.READ_PHONE_STATE
	USED by API method: <analysis.MethodAnalysis Landroid/telephony/TelephonyManager;->getLine1Number()Ljava/lang/String;>
	in app method:      Lcom/globe/gcash/android/utility/TelephonyManagerUtils; identifyMobileNumber ()Ljava/lang/String;

Unused Permissions:
android.permission.READ_SMS
android.permission.SEND_SMS
android.permission.WRITE_EXTERNAL_STORAGE
com.google.android.providers.gsf.permission.READ_GSERVICES
android.permission.RECEIVE_SMS
com.globe.gcash.android.permission.MAPS_RECEIVE

Dangerous Combinations:

Unrequested Permissions:
